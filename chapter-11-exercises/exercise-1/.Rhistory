# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers)
# Filter the data set for vehicles manufactured in 1997
vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
order(vehicle[vehicles$year == 1997, ]$hwy)
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
order(vehicles[vehicles$year == 1997, ]$hwy)
?mean()
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicle$average <- mean(vehicles$cty, vehicles$hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicle$average <- (vehicles$cty + vehicles$hwy) / 2
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles$average <- (vehicles$cty + vehicles$hwy) / 2
View(vehicles)
two_wheel_twenty_mpg <- vehicles[vehicles$drive == "2-Wheel Drive" & vehicles$cty > 20, ]
View(two_wheel_twenty_mpg)
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
two_wheel_twenty_mpg[two_wheel_twenty_mpg$hwy == min(two_wheel_twenty_mpg$hwy), ]
vehicles[vehicles$year == year_choice & vehicles$make == make_choice & vehicles$hwy == max(vehicles$hwy), ]
# What was the most efficient Honda model of 1995?
best_hwy_mpg(1995, "Honda")
best_hwy_mpg <- function(year_choice, make_choice) {
vehicles[vehicles$year == year_choice & vehicles$make == make_choice & vehicles$hwy == max(vehicles$hwy), ]
}
# What was the most efficient Honda model of 1995?
best_hwy_mpg(1995, "Honda")
# What was the most efficient Honda model of 1995?
best_hwy_mpg("1995", "Honda")
library(fueleconomy)
View(vehicles)
manufacturers <- vehicles$make
unique(manufacturers)
vehicles[vehicles$year == 1997, ]
order(vehicles[vehicles$year == 1997, ]$hwy)
vehicles[vehicles$year == 1997, ][order(vehicles$hwy), ]
vehicles[order(vehicles[vehicles$year == 1997, ]$hwy), ]
order(vehicles[vehicles$year == 1997, ]$hwy)
# Exercise 1: working with data frames (review)
# Install devtools package: allows installations from GitHub
#install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
#devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers) #128
# Filter the data set for vehicles manufactured in 1997
vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
order(vehicles[vehicles$year == 1997, ]$hwy)
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles$average <- (vehicles$cty + vehicles$hwy) / 2
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_twenty_mpg <- vehicles[vehicles$drive == "2-Wheel Drive" & vehicles$cty > 20, ]
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
two_wheel_twenty_mpg[two_wheel_twenty_mpg$hwy == min(two_wheel_twenty_mpg$hwy), ]
# Write a function that takes a `year_choice` and a `make_choice` as parameters,
# and returns the vehicle model that gets the most hwy miles/gallon of vehicles
# of that make in that year.
# You'll need to filter more (and do some selecting)!
best_hwy_mpg <- function(year_choice, make_choice) {
vehicles[vehicles$year == year_choice & vehicles$make == make_choice & vehicles$hwy == max(vehicles$hwy), ]
}
# What was the most efficient Honda model of 1995?
best_hwy_mpg("1995", "Honda")
best_hwy_mpg <- function(year_choice, make_choice) {
vehicles[vehicles$year == year_choice & vehicles$make == make_choice & vehicles$hwy == max(vehicles$hwy), "model"]
}
best_hwy_mpg("1995", "Honda")
best_hwy_mpg(1995, "Honda")
best_hwy_mpg <- function(year_choice, make_choice) {
vehicles[(vehicles$year == year_choice) & (vehicles$make == make_choice) & (vehicles$hwy == max(vehicles$hwy)), "model"]
}
# What was the most efficient Honda model of 1995?
best_hwy_mpg(1995, "Honda")
best_hwy_mpg <- function(year_choice, make_choice) {
vehicles[((vehicles$year == year_choice) & (vehicles$make == make_choice) & (vehicles$hwy == max(vehicles$hwy))), "model"]
}
# What was the most efficient Honda model of 1995?
best_hwy_mpg(1995, "Honda")
best_hwy_mpg("1995", "Honda")
best_hwy_mpg <- function(year_choice, make_choice) {
filter_vehicles <- vehicle[(vehicles$year == year_choice) & (vehicles$make == make_choice), ]
filter_vehicles[filter_vehicles$hwy == max(filter_vehicles$hwy), "model"]
}
best_hwy_mpg("1995", "Honda")
best_hwy_mpg <- function(year_choice, make_choice) {
filter_vehicles <- vehicles[(vehicles$year == year_choice) & (vehicles$make == make_choice), ]
filter_vehicles[filter_vehicles$hwy == max(filter_vehicles$hwy), "model"]
}
# What was the most efficient Honda model of 1995?
best_hwy_mpg("1995", "Honda")
